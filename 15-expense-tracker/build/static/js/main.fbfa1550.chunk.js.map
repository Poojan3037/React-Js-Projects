{"version":3,"sources":["reducer.js","context.js","Calculator.js","IncomeChart.js","App.js","index.js"],"names":["reducer","state","action","type","income","payload","expense","income_total","reduce","intial","item","amount","incomeTotal","expense_total","expenseTotal","balance","history","AppContext","createContext","AppProvider","children","useReducer","dispatcher","Provider","value","Calculator","useContext","useState","money","setMoney","Category","setCategory","setType","console","log","className","toFixed","onSubmit","e","preventDefault","m","parseFloat","category","TextField","id","label","onChange","target","FormControl","InputLabel","Select","labelId","MenuItem","Button","variant","map","index","IncomeChart","props","moneyType","length","data","color","push","labels","datasets","backgroundColor","hoverOffset","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbfa1550.chunk.js","sourcesContent":["const reducer=(state,action)=>{\r\n    if(action.type===\"ADD_INCOME\"){\r\n        return({\r\n            ...state,\r\n            income:[...state.income,action.payload]\r\n        })\r\n    }\r\n\r\n    if(action.type===\"ADD_EXPENSE\"){\r\n        return({\r\n            ...state,\r\n            expense:[...state.expense,action.payload]\r\n        })\r\n    }\r\n\r\n    if(action.type===\"CALCULATE_INCOME\"){\r\n        \r\n        let income_total=state.income.reduce((intial,item)=>{\r\n            return intial+item.amount\r\n        },0.00)\r\n\r\n\r\n        return({\r\n            ...state,\r\n            incomeTotal:income_total\r\n        })\r\n    }\r\n\r\n    if(action.type===\"CALCULATE_EXPENSE\"){\r\n        let expense_total=state.expense.reduce((intial,item)=>{\r\n            return intial+item.amount;\r\n        },0.00)\r\n\r\n\r\n        return({\r\n            ...state,\r\n            expenseTotal:expense_total\r\n        })\r\n    }\r\n\r\n    if(action.type===\"ADD_BALANCE\"){\r\n        let item=state.balance+action.payload;\r\n        return({\r\n            ...state,\r\n            balance:item\r\n        })\r\n    }\r\n\r\n    if(action.type===\"MINUS_BALANCE\"){\r\n        let item=state.balance-action.payload;\r\n        return({\r\n            ...state,\r\n            balance:item\r\n        })\r\n    }\r\n\r\n    if(action.type===\"UPDATE_HISTORY\"){\r\n        return({\r\n            ...state,\r\n            history:[action.payload,...state.history]\r\n        })\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default reducer;","import React, { createContext, useReducer } from 'react';\r\nimport reducer from './reducer';\r\n\r\nconst AppContext = createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n\r\n\r\n\r\n    const [state, dispatcher] = useReducer(reducer, {\r\n        income: [],\r\n        expense: [],\r\n        incomeTotal: 0,\r\n        expenseTotal: 0,\r\n        balance: 0,\r\n        history:[]\r\n\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <AppContext.Provider\r\n                value={\r\n                    {\r\n                        ...state,\r\n                        dispatcher\r\n                    }\r\n                }\r\n            >\r\n                {children}\r\n            </AppContext.Provider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport { AppProvider, AppContext };","import React, { useContext, useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport './Calculator.css';\r\nimport { AppContext } from './context';\r\n\r\nconst Calculator = () => {\r\n\r\n    let { dispatcher, income, expense, incomeTotal, expenseTotal, balance, history } = useContext(AppContext);\r\n\r\n    let [money, setMoney] = useState('');\r\n    let [Category, setCategory] = useState('');\r\n    let [type, setType] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let m = parseFloat(money)\r\n        console.log(typeof m)\r\n        if (type === 1) {\r\n            console.log(\"expense\")\r\n            let item = {\r\n                amount: m,\r\n                category: Category,\r\n                type: \"expense\"\r\n            }\r\n            dispatcher({ type: \"ADD_EXPENSE\", payload: item })\r\n            dispatcher({ type: \"CALCULATE_EXPENSE\" })\r\n            dispatcher({ type: \"MINUS_BALANCE\", payload: m })\r\n            dispatcher({ type: \"UPDATE_HISTORY\", payload: item })\r\n        }\r\n        if (type === 0) {\r\n            console.log(\"income\")\r\n            let item = {\r\n                amount: m,\r\n                category: Category,\r\n                type: \"income\"\r\n            }\r\n            dispatcher({ type: \"ADD_INCOME\", payload: item })\r\n            dispatcher({ type: \"CALCULATE_INCOME\" })\r\n            dispatcher({ type: \"ADD_BALANCE\", payload: m })\r\n            dispatcher({ type: \"UPDATE_HISTORY\", payload: item })\r\n        }\r\n\r\n        setMoney('');\r\n        setType('');\r\n        setCategory('')\r\n    }\r\n\r\n    console.log(history)\r\n\r\n    return (\r\n        <>\r\n            <div className=\"calculator\">\r\n                <div className=\"calculator_title\">\r\n                    <h2>Expense Tracker</h2>\r\n                </div>\r\n                <div className=\"calculator_balance\">\r\n                    <h3>Your Balance</h3>\r\n                    <h1>${balance.toFixed(2)}</h1>\r\n                </div>\r\n                <div className=\"calculator_total\">\r\n                    <div className=\"income\">\r\n                        <h3>Income</h3>\r\n                        <h3><span>${incomeTotal.toFixed(2)}</span></h3>\r\n                    </div>\r\n                    <div className=\"expense\">\r\n                        <h3>Expense</h3>\r\n                        <h3><span>${expenseTotal.toFixed(2)}</span></h3>\r\n                    </div>\r\n                </div>\r\n                <form className=\"calculator_new_transaction\" onSubmit={handleSubmit}>\r\n                    <div className=\"calculator_input\">\r\n                        <TextField id=\"standard-basic\" label=\"Amount\" value={money} onChange={(e) => setMoney(e.target.value)} />\r\n                    </div>\r\n                    <div className=\"calculator_input\">\r\n                        <TextField className=\"calculator_category\" id=\"standard-basic\" label=\"Category\" value={Category} onChange={(e) => setCategory(e.target.value)} />\r\n                    </div>\r\n\r\n                    <div className=\"calculator_input\">\r\n                        <FormControl className=\"calculator_type\">\r\n                            <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                value={type}\r\n                                onChange={(e) => setType(e.target.value)}\r\n                            >\r\n                                <MenuItem value={0}>Income</MenuItem>\r\n                                <MenuItem value={1}>Expense</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <Button variant=\"contained\" className=\"calculator_button\" type=\"submit\">Add Transaction</Button>\r\n                </form>\r\n                <div className=\"calculator_history\">\r\n                    <h3 className=\"history_title\">History</h3>\r\n                    <div className=\"history_box\">\r\n                        {\r\n                            history.map((item, index) => {\r\n\r\n                                if (item.type == \"income\") {\r\n                                    console.log(\"income\")\r\n                                    return (\r\n                                        <>\r\n                                            <div key={index} className=\"history green\">\r\n                                                <h4>{item.category}</h4>\r\n                                                <h4>+ {item.amount.toFixed(2)}</h4>\r\n                                            </div>\r\n                                        </>\r\n                                    )\r\n                                } if (item.type == \"expense\") {\r\n                                    return (\r\n                                        <>\r\n                                            <div key={index} className=\"history red\">\r\n                                                <h4>{item.category}</h4>\r\n                                                <h4>- {item.amount.toFixed(2)}</h4>\r\n                                            </div>\r\n                                        </>\r\n                                    )\r\n                                }\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Calculator;","import React, { useContext } from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\n\r\n\r\nconst IncomeChart = (props) => {\r\n\r\n    let {moneyType}=props;\r\n\r\n    let type;\r\n    if(moneyType.length>0){\r\n\r\n        type=moneyType[0].type;\r\n    }\r\n\r\n    \r\n\r\n    let label=[];\r\n    let data=[];\r\n    let color=[];\r\n    if(type===\"expense\"){\r\n        color=['#ff8080','#ff6666','#ff4d4d','#ff3333','#ff1919','#ff0000','#e60000','#cc0000','#b30000','#990000','#800000','#660000','#4d0000','#330000','#190000']\r\n    }else{\r\n        color=['#99cc99','#80c080','#66b366','#4da64d','#339933','#198d19','#008000','#007300','#006600','#005a00','#004d00','#004000','#003300','#002600','#001a00']\r\n    }\r\n\r\n    moneyType.map((item)=>{\r\n        label.push(item.category);\r\n        data.push(item.amount)\r\n    })\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <Doughnut\r\n                data={\r\n                    {\r\n                        labels: label,\r\n                        datasets: [{\r\n                            label: 'My First Dataset',\r\n                            data:data,\r\n                            backgroundColor: color,\r\n                            hoverOffset: 4\r\n                        }]\r\n                    }\r\n                }\r\n            >\r\n\r\n            </Doughnut>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default IncomeChart;","import React, { useContext } from 'react';\r\nimport Calculator from './Calculator'\r\nimport IncomeChart from './IncomeChart';\r\nimport './App.css'\r\nimport { AppContext } from './context';\r\n\r\n\r\nconst App = () => {\r\n    let { income, expense,incomeTotal,expenseTotal } = useContext(AppContext);\r\n    return (<>\r\n        <div className=\"app\">\r\n            <div className=\"left_app\">\r\n                <h1>Income</h1>\r\n                <h2>${incomeTotal.toFixed(2)}</h2>\r\n                <IncomeChart moneyType={income} />\r\n            </div>\r\n            <div className=\"center_app\">\r\n                <Calculator />\r\n            </div>\r\n            <div className=\"right_app\">\r\n                <h1>Expense</h1>\r\n                <h2>${expenseTotal.toFixed(2)}</h2>\r\n                <IncomeChart moneyType={expense} />\r\n            </div>\r\n        </div>\r\n    </>)\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AppProvider } from './context';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}